# This is a basic workflow to help you get started with Actions

name: Publish Artifacts

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the release branch
  push:
    branches: [ release ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release-project:
    name: publish artifact to Github Releases
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: data-analysis-snapshot
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
            tag_name: v${{ github.run_number }}
            release_name: Release V${{ github.run_number }}
      - name: Upload asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ./data-analysis-snapshot.zip
            asset_name: data-analysis-snapshot-v${{ github.run_number }}.zip
            asset_content_type: application/zip
  build-project:
    name: publish artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: data-analysis-snapshot
          path: target/data-analysis*.jar